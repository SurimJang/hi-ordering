---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order
  labels:
    app: order
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order
  template:
    metadata:
      labels:
        app: order
    spec:
      containers:
        - name: order
          image: jangsoowang/order:v1
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: "200m"
          # readinessProbe:
          #   httpGet:
          #     path: '/actuator/health'
          #     port: 8080
          #   initialDelaySeconds: 10
          #   timeoutSeconds: 2
          #   periodSeconds: 5
          #   failureThreshold: 10
          # livenessProbe:
          #   httpGet:
          #     path: '/actuator/health'
          #     port: 8080
          #   initialDelaySeconds: 120
          #   timeoutSeconds: 2
          #   periodSeconds: 5
          #   failureThreshold: 5

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: management
  labels:
    app: management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: management
  template:
    metadata:
      labels:
        app: management
    spec:
      containers:
        - name: management
          image: jangsoowang/management:v1
          ports:
            - containerPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment
  labels:
    app: payment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payment
  template:
    metadata:
      labels:
        app: payment
    spec:
      containers:
        - name: payment
          image: jangsoowang/payment:v1
          ports:
            - containerPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user
  labels:
    app: user
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user
  template:
    metadata:
      labels:
        app: user
    spec:
      containers:
        - name: user
          image: jangsoowang/user:v1
          ports:
            - containerPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: menu
  labels:
    app: menu
spec:
  replicas: 1
  selector:
    matchLabels:
      app: menu
  template:
    metadata:
      labels:
        app: menu
    spec:
      containers:
        - name: menu
          image: jangsoowang/menu:v2
          ports:
            - containerPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: category
  labels:
    app: category
spec:
  replicas: 1
  selector:
    matchLabels:
      app: category
  template:
    metadata:
      labels:
        app: category
    spec:
      containers:
        - name: category
          image: jangsoowang/category:v1
          ports:
            - containerPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: jangsoowang/frontend:v3
          ports:
            - containerPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:13
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: 'postgres'
            - name: POSTGRES_USER
              value: 'postgres'
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret  # Secret 이름
                  key: POSTGRES_PASSWORD  # Secret에서 참조할 키
          volumeMounts:
            - mountPath: /var/lib/postgresql/data # 영구 저장소 경로
              name: postgres-storage
            - mountPath: /docker-entrypoint-initdb.d/ # init.sql 경로
              name: init-sql-config
      volumes:
        - name: postgres-storage
          emptyDir: {}
        - name: init-sql-config
          configMap:
            name: init-sql-config

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: azurefile
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: azurefile
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: order
  labels:
    app: order
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: order

---
apiVersion: v1
kind: Service
metadata:
  name: management
  labels:
    app: management
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: management

---
apiVersion: v1
kind: Service
metadata:
  name: payment
  labels:
    app: payment
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: payment

---
apiVersion: v1
kind: Service
metadata:
  name: user
  labels:
    app: user
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: user

---
apiVersion: v1
kind: Service
metadata:
  name: menu
  labels:
    app: menu
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: menu

---
apiVersion: v1
kind: Service
metadata:
  name: category
  labels:
    app: category
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: category

---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: frontend
